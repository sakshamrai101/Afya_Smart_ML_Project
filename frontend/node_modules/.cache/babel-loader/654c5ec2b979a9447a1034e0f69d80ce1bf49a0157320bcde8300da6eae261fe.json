{"ast":null,"code":"var _jsxFileName = \"/Users/davidchuang/Desktop/SmartMLAfya/Afya_Smart_ML_Project/frontend/src/ImportFile.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImportFile = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0); // State for progress\n  const navigate = useNavigate();\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleFileImport = async () => {\n    if (selectedFile) {\n      setLoading(true);\n      // Simulate importing the PDF file\n      let progressInterval = setInterval(() => {\n        setProgress(prevProgress => {\n          if (prevProgress < 100) {\n            return prevProgress + 10;\n          } else {\n            clearInterval(progressInterval);\n            setLoading(false);\n            navigate('/service-types');\n            return 100;\n          }\n        });\n      }, 500); // Simulating progress update every 500ms\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"import-container\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), \"Loading...\", /*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: progress,\n        label: `${progress}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formFileLg\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: \"import-title\",\n        children: \"Import Econsult\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\",\n        size: \"lg\",\n        onChange: handleFileChange,\n        accept: \".pdf,.docx,.txt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), !loading && /*#__PURE__*/_jsxDEV(Button, {\n      className: \"import-button\",\n      variant: \"primary\",\n      type: \"submit\",\n      onClick: handleFileImport,\n      disabled: !selectedFile || loading,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ImportFile, \"opqzW17mvJk8ANv+NwL8w+NVi/c=\", true);\n_c = ImportFile;\nvar _c;\n$RefreshReg$(_c, \"ImportFile\");","map":{"version":3,"names":["ImportFile","_s","selectedFile","setSelectedFile","useState","loading","setLoading","progress","setProgress","navigate","useNavigate","handleFileChange","e","target","files","handleFileImport","progressInterval","setInterval","prevProgress","clearInterval","_jsxDEV","Container","className","children","Spinner","animation","role","fileName","_jsxFileName","lineNumber","columnNumber","ProgressBar","now","label","Form","Group","controlId","Label","Control","type","size","onChange","accept","Button","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/davidchuang/Desktop/SmartMLAfya/Afya_Smart_ML_Project/frontend/src/ImportFile.js"],"sourcesContent":["const ImportFile = () => {\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [progress, setProgress] = useState(0) // State for progress\n  const navigate = useNavigate()\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0])\n  }\n\n  const handleFileImport = async () => {\n    if (selectedFile) {\n      setLoading(true)\n      // Simulate importing the PDF file\n      let progressInterval = setInterval(() => {\n        setProgress((prevProgress) => {\n          if (prevProgress < 100) {\n            return prevProgress + 10\n          } else {\n            clearInterval(progressInterval)\n            setLoading(false)\n            navigate('/service-types')\n            return 100\n          }\n        })\n      }, 500) // Simulating progress update every 500ms\n    }\n  }\n\n  return (\n    <Container className='import-container'>\n      {loading ? (\n        <div className='text-center'>\n          <Spinner animation='border' role='status'>\n            <span className='visually-hidden'>Loading...</span>\n          </Spinner>\n          Loading...\n          <ProgressBar now={progress} label={`${progress}%`} />\n        </div>\n      ) : (\n        <Form.Group controlId='formFileLg' className='mb-3'>\n          <Form.Label className='import-title'>Import Econsult</Form.Label>\n          <Form.Control\n            type='file'\n            size='lg'\n            onChange={handleFileChange}\n            accept='.pdf,.docx,.txt'\n          />\n        </Form.Group>\n      )}\n      {!loading && (\n        <Button\n          className='import-button'\n          variant='primary'\n          type='submit'\n          onClick={handleFileImport}\n          disabled={!selectedFile || loading}\n        >\n          Upload\n        </Button>\n      )}\n    </Container>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}